import streamlit as st 
import repositories.cart

@st.cache_data
def find_product_by_id(product_id,products):
    for product in products:
        if product["product_id"] == product_id:
            return product
    return None

def get_cart_products():
    return repositories.cart.get_cart_products(st.session_state.logged_in)
    

def update_cart_product(product_id,change):
    match change:
        case 1:
            repositories.cart.add_to_cart(st.session_state.logged_in,product_id)
        case -1:
            repositories.cart.take_from_cart(st.session_state.logged_in,product_id)
        case 0:
            repositories.cart.remove_from_cart(st.session_state.logged_in,product_id)


def show_cart_page():
    st.title("üõí –ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤")
    total_cost = 0

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∫–æ—Ä–∑–∏–Ω–µ
    cart_products = get_cart_products()

    if not cart_products:
        st.write("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
        return

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    for item in cart_products:
        product_id = item["product_id"]
        amount = item["amount"]
        product = find_product_by_id(product_id,st.session_state.products)
        if not product:
            st.warning(f"–¢–æ–≤–∞—Ä —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ")
            continue

        product_name = product["product_name"]
        cost = product["cost"]
        # info?

        total_cost += cost * amount

        col1, col2, col3 = st.columns([1, 3, 1])

        with col1:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            try:
                st.write("Image_cart")
            except Exception:
                st.write("–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")

        with col2:
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ
            st.subheader(product_name)
            st.write(f"–¶–µ–Ω–∞: {cost} ‚ÇΩ")
            st.write(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount}")


            # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            if st.button("‚ûñ –£–º–µ–Ω—å—à–∏—Ç—å", key=f"decrease-{product_id}"):
                if amount > 1:
                    update_cart_product( product_id, -1)
                else:
                    update_cart_product( product_id, 0) 
                st.rerun()

            if st.button("‚ûï –£–≤–µ–ª–∏—á–∏—Ç—å", key=f"increase-{product_id}"):
                update_cart_product( product_id, 1)
                st.rerun()

        with col3:
            # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
            if st.button("‚ùå –£–¥–∞–ª–∏—Ç—å", key=f"delete-{product_id}"):
                update_cart_product( product_id, 0)
                st.rerun()

    # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
    # total_cost = sum(cost * amount for _, _, cost, _, amount in cart_products)
    st.write(f"### –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_cost} ‚ÇΩ")
    sale_btn = st.button("–ö—É–ø–∏—Ç—å")
    # –æ—Ñ–æ—Ä–º–µ–ª–Ω–∏–µ? 
    if sale_btn:
        st.success("Hurray!")